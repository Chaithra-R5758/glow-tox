[{"C:\\Users\\Charan\\Admin\\app\\Changes\\src\\routes\\service\\index.js":"1","C:\\Users\\Charan\\Admin\\app\\Changes\\src\\routes\\gift-cards2\\index.js":"2"},{"size":11774,"mtime":1611557103355,"results":"3","hashOfConfig":"4"},{"size":7289,"mtime":1611557617047,"results":"5","hashOfConfig":"4"},{"filePath":"6","messages":"7","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"lendpl",{"filePath":"8","messages":"9","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"10"},"C:\\Users\\Charan\\Admin\\app\\Changes\\src\\routes\\service\\index.js",["11","12","13","14","15","16","17","18","19","20"],"C:\\Users\\Charan\\Admin\\app\\Changes\\src\\routes\\gift-cards2\\index.js",["21","22","23","24"],"import React, { useState } from 'react';\r\nimport { PageTitle } from '../../components/page-title/'\r\nimport './gift-card2.scss';\r\nimport axios from '../../config/api/'\r\nimport { SearchOutlined } from '@ant-design/icons'\r\nimport { Card, Table, Tag, Input, Button, Modal } from 'antd';\r\nimport { withRouter } from 'react-router-dom';\r\nimport { response } from './mock.js'\r\n\r\nclass GiftCards extends React.Component {\r\n  constructor() {\r\n    super()\r\n    this.state = {\r\n      service: {},\r\n    saveServiceLoading: false,\r\n  };\r\n}\r\n\r\n  // state = { visible: true };\r\n  saveService = async (service) => {\r\n    this.setState({\r\n      saveServiceLoading: true,\r\n    })\r\n    const saveService = await axios.get('/admin/saveService', service)\r\n    this.setState({\r\n      saveServiceLoading: false,\r\n    })\r\n  }\r\n\r\n  showModal = () => {\r\n    this.setState({\r\n      visible: true,\r\n    });\r\n  };\r\n\r\n  hideModal = () => {\r\n    this.setState({\r\n      visible: false,\r\n    });\r\n  };\r\n\r\n  enterLoading = index => {\r\n    this.setState(({ loadings }) => {\r\n      const newLoadings = [...loadings];\r\n      newLoadings[index] = true;\r\n\r\n      return {\r\n        loadings: newLoadings,\r\n      };\r\n    });\r\n    setTimeout(() => {\r\n      this.setState(({ loadings }) => {\r\n        const newLoadings = [...loadings];\r\n        newLoadings[index] = false;\r\n\r\n        return {\r\n          loadings: newLoadings,\r\n        };\r\n      });\r\n    }, 6000);\r\n  };\r\n  render() {\r\n    const { service, saveServiceLoading } = this.state\r\n    const columns = [\r\n      {\r\n        title: 'Gift Card No',\r\n        dataIndex: 'id',\r\n        key: 'id',\r\n\r\n      },\r\n      {\r\n        title: 'Client Name',\r\n        dataIndex: 'name',\r\n        key: 'name',\r\n        render: text => <a>{text}</a>,\r\n\r\n      },\r\n      {\r\n        title: 'Email Id',\r\n        dataIndex: 'email',\r\n        key: 'email',\r\n\r\n      },\r\n      {\r\n        title: 'Service',\r\n        dataIndex: 'service',\r\n        key: 'service',\r\n\r\n      },\r\n      {\r\n        title: 'Offer',\r\n        dataIndex: 'offer',\r\n        key: 'offer',\r\n\r\n      },\r\n      {\r\n        title: 'Status',\r\n        key: 'tags',\r\n        dataIndex: 'tags',\r\n\r\n        render: tags => (\r\n          <>\r\n            {tags.map(tag => {\r\n              let color = tag.length > 5 ? 'geekblue' : 'green';\r\n              if (tag === 'Refund') {\r\n                color = 'volcano';\r\n              }\r\n              return (\r\n                <Tag color={color} key={tag}>\r\n                  {tag.toUpperCase()}\r\n                </Tag>\r\n              );\r\n            })}\r\n          </>\r\n        ),\r\n      },\r\n    ];\r\n\r\n    const data = [\r\n      {\r\n        key: '1',\r\n        name: 'John Brown',\r\n        age: 32,\r\n        id: 1,\r\n        address: 'New York No. 1 Lake Park',\r\n        tags: ['New'],\r\n        email: 'akash@gmail.com',\r\n        offer: '10% off',\r\n        service: 'service 1'\r\n      },\r\n      {\r\n        key: '2',\r\n        name: 'Jim Green',\r\n        age: 42,\r\n        id: 2,\r\n        address: 'London No. 1 Lake Park',\r\n        tags: ['Redeemed'],\r\n        email: 'hamse@gmail.com',\r\n        offer: '15% off',\r\n        service: 'service 1'\r\n\r\n\r\n      },\r\n      {\r\n        key: '3',\r\n        name: 'Jim Green',\r\n        age: 42,\r\n        id: 3,\r\n        address: 'London No. 1 Lake Park',\r\n        tags: ['Refund'],\r\n        email: 'hamse@gmail.com',\r\n        offer: '15% off',\r\n        service: 'service 1'\r\n\r\n\r\n      },\r\n      {\r\n        key: '4',\r\n        name: 'Jim Green',\r\n        age: 42,\r\n        id: 4,\r\n        address: 'London No. 1 Lake Park',\r\n        tags: ['Chargeback'],\r\n        email: 'hamse@gmail.com',\r\n        offer: '15% off',\r\n        service: 'service 1'\r\n\r\n\r\n      },\r\n      {\r\n        key: '5',\r\n        name: 'Joe Black',\r\n        age: 32,\r\n        id: 5,\r\n        address: 'Sidney No. 1 Lake Park',\r\n        tags: ['Redeemed',],\r\n        email: 'john@gmail.com',\r\n        offer: '20% off',\r\n        service: 'service 1'\r\n      }\r\n    ];\r\n\r\n    return (\r\n      <div className=\"gift-card-screen\">\r\n        <div className={'content-wrapper'}>\r\n          <PageTitle\r\n            title={'Gift Cards'}\r\n          />\r\n          <div className={\"gift-card\"}>\r\n            <Card>\r\n              <div className={'gift-card-wrapper'}>\r\n                <div className={'gift-card-inner-wrapper'}>\r\n                  <div className={'options-wrapper'}>\r\n                    <div className={'search-wrapper'}>\r\n                      <Input placeholder=\"Search...\" prefix={<SearchOutlined />} />\r\n                    </div>\r\n                    <div className={'primary-btn '} onClick={this.showModal}>\r\n                      Create New\r\n                  </div>\r\n                  </div>\r\n                  <Table dataSource={data} columns={columns} />\r\n                  <Modal\r\n                    visible={this.state.visible}\r\n                    onCancel={this.hideModal} footer={null} width={700} style={{ top: 250 }} >\r\n                    <div className=\"modal-title\" style={{\r\n                      fontFamily: \"Poppins, sans-serif\",\r\n                      fontWeight: ' bolder', fontSize: '18px', marginTop: -10\r\n                    }}>Gift Cards-Create</div>\r\n                   \r\n                    <div className=\"create-wrapper\" style={{ display: 'flex', marginTop: 20 }}>\r\n                      <Input value=\"Client Name\" placeholder=\"Client Name\" style={{ width: '70%', backgroundColor: ' #E2E2E2', blockSize: 40, border: '0px', borderRadius: '5px', marginRight: 10 }} />\r\n                      <Input value=\"Email Id\" placeholder=\"Email Id\" style={{ width: '70%', backgroundColor: ' #E2E2E2', blockSize: 40, border: '0px', borderRadius: '5px' }} />\r\n                    </div>\r\n                    <div className={'create-row'} style={{ display: 'flex', marginTop: 20 }}>\r\n                      <Input value=\"Service Name\" placeholder=\"Service Name\" style={{ width: '70%', backgroundColor: ' #E2E2E2', blockSize: 40, border: '0px', borderRadius: '5px', marginRight: 10 }} />\r\n                      <Input\r\n                        value=\"Value\"\r\n                        placeholder=\"Value\"\r\n                        style={{ width: '37%', backgroundColor: ' #E2E2E2', blockSize: 40, border: '0px', borderRadius: '5px', marginRight: 10 }}\r\n                      />\r\n                      <div className={\" select-wrapper\"}  >\r\n                        <select style={{ width: 140, backgroundColor: ' #E2E2E2', blockSize: 40, border: '0px', borderRadius: '5px',marginBottom: 30 }}>\r\n\r\n                          <option value=\"\" > </option>\r\n                          <option value=\"dollar\" >$</option>\r\n                          <option value=\"percentage\">%</option>\r\n                        </select>\r\n                      </div>\r\n                    </div>\r\n                    <Button loading={saveServiceLoading}\r\n                        onClick={() => this.saveService(service)} className=\"save-btn\" style={{ float: 'right', backgroundColor: '#5D72E9', color: 'white', borderRadius: '5px', padding: '0px 25px 0px 25px', marginTop: '-20px' }}>Save</Button>\r\n                  </Modal>\r\n\r\n                </div>\r\n              </div>\r\n            </Card>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n\r\n    );\r\n  }\r\n}\r\n\r\nexport default withRouter(GiftCards);",{"ruleId":"25","severity":1,"message":"26","line":4,"column":56,"nodeType":"27","messageId":"28","endLine":4,"endColumn":61},{"ruleId":"25","severity":1,"message":"29","line":4,"column":63,"nodeType":"27","messageId":"28","endLine":4,"endColumn":73},{"ruleId":"25","severity":1,"message":"30","line":4,"column":75,"nodeType":"27","messageId":"28","endLine":4,"endColumn":79},{"ruleId":"25","severity":1,"message":"31","line":5,"column":17,"nodeType":"27","messageId":"28","endLine":5,"endColumn":25},{"ruleId":"25","severity":1,"message":"32","line":7,"column":10,"nodeType":"27","messageId":"28","endLine":7,"endColumn":20},{"ruleId":"25","severity":1,"message":"33","line":13,"column":9,"nodeType":"27","messageId":"28","endLine":13,"endColumn":13},{"ruleId":"25","severity":1,"message":"34","line":15,"column":9,"nodeType":"27","messageId":"28","endLine":15,"endColumn":13},{"ruleId":"25","severity":1,"message":"35","line":35,"column":11,"nodeType":"27","messageId":"28","endLine":35,"endColumn":17},{"ruleId":"25","severity":1,"message":"36","line":125,"column":11,"nodeType":"27","messageId":"28","endLine":125,"endColumn":22},{"ruleId":"37","severity":1,"message":"38","line":222,"column":27,"nodeType":"39","endLine":232,"endColumn":29},{"ruleId":"25","severity":1,"message":"31","line":1,"column":17,"nodeType":"27","messageId":"28","endLine":1,"endColumn":25},{"ruleId":"25","severity":1,"message":"40","line":8,"column":10,"nodeType":"27","messageId":"28","endLine":8,"endColumn":18},{"ruleId":"25","severity":1,"message":"36","line":24,"column":11,"nodeType":"27","messageId":"28","endLine":24,"endColumn":22},{"ruleId":"41","severity":1,"message":"42","line":75,"column":25,"nodeType":"39","endLine":75,"endColumn":28},"no-unused-vars","'Image' is defined but never used.","Identifier","unusedVar","'PageHeader' is defined but never used.","'Form' is defined but never used.","'useState' is defined but never used.","'responseId' is defined but never used.","'Meta' is assigned a value but never used.","'Link' is assigned a value but never used.","'result' is assigned a value but never used.","'saveService' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'response' is defined but never used.","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md"]