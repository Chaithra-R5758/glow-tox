[{"C:\\Users\\Charan\\Admin\\app\\Changes\\src\\routes\\service\\index.js":"1","C:\\Users\\Charan\\Admin\\app\\Changes\\src\\routes\\login2\\index.js":"2","C:\\Users\\Charan\\Admin\\app\\Changes\\src\\components\\navbar\\index.js":"3","C:\\Users\\Charan\\Admin\\app\\Changes\\src\\routes\\gift-cards\\index.js":"4","C:\\Users\\Charan\\Admin\\app\\Changes\\src\\config\\api\\index.js":"5","C:\\Users\\Charan\\Admin\\app\\Changes\\src\\routes\\promotions\\index.js":"6","C:\\Users\\Charan\\Admin\\app\\Changes\\src\\routes\\service-history\\index.js":"7"},{"size":4685,"mtime":1610805368203,"results":"8","hashOfConfig":"9"},{"size":4678,"mtime":1610800317927,"results":"10","hashOfConfig":"9"},{"size":7885,"mtime":1610795915923,"results":"11","hashOfConfig":"9"},{"size":5950,"mtime":1610803128724,"results":"12","hashOfConfig":"9"},{"size":383,"mtime":1610795915954,"results":"13","hashOfConfig":"9"},{"size":5814,"mtime":1610803857100,"results":"14","hashOfConfig":"9"},{"size":7187,"mtime":1610804196212,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"lendpl",{"filePath":"18","messages":"19","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"20","messages":"21","errorCount":0,"warningCount":16,"fixableErrorCount":0,"fixableWarningCount":0,"source":"22","usedDeprecatedRules":"23"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"28","messages":"29","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"30","messages":"31","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\Charan\\Admin\\app\\Changes\\src\\routes\\service\\index.js",["32","33"],"C:\\Users\\Charan\\Admin\\app\\Changes\\src\\routes\\login2\\index.js",["34","35","36","37","38","39","40","41","42"],"C:\\Users\\Charan\\Admin\\app\\Changes\\src\\components\\navbar\\index.js",["43","44","45","46","47","48","49","50","51","52","53","54","55","56","57","58"],"import React from 'react';\r\nimport { withRouter, } from \"react-router-dom\";\r\nimport Icon from '@ant-design/icons';\r\nimport './navbar.scss';\r\nimport { NAV_OPTIONS, HEADER_TITLE } from '../../constants/';\r\nimport {\r\n  CaretLeftOutlined,\r\n  GiftFilled,\r\n  FundFilled,\r\n  ExperimentFilled,\r\n  AppstoreFilled,\r\n  HistoryOutlined,\r\n  MenuOutlined,\r\n  HomeFilled,\r\n  StarFilled,\r\n  ShopFilled,\r\n  FileTextFilled,\r\n  DribbbleCircleFilled\r\n} from '@ant-design/icons';\r\nimport { getRouteName } from '../../utils/';\r\n//import { connect } from 'react-redux';\r\nimport Cookies from 'js-cookie';\r\nimport { Drawer, Button, Radio, Space } from 'antd';\r\nimport home from '../../assets/home.jpg'\r\n\r\nclass NavBar extends React.Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      top: false,\r\n      left: false,\r\n      bottom: false,\r\n      right: false,\r\n      selectedOption: '',\r\n      userType: '',\r\n      //  screenName: 'Home',\r\n      selectedNavOption: -1,\r\n      visible: false,\r\n    }\r\n  }\r\n\r\n  showDrawer = () => {\r\n    this.setState({\r\n      visible: true,\r\n    });\r\n  };\r\n\r\n  componentWillMount() {\r\n    const userType = Cookies.get('userType')\r\n    if (userType) {\r\n      this.setState({ userType })\r\n    }\r\n  }\r\n\r\n  toggleDrawer = (side, open) => event => {\r\n    if (event.type === 'keydown' && (event.key === 'Tab' || event.key === 'Shift')) {\r\n      return;\r\n    }\r\n    this.setState({ left: open });\r\n  };\r\n\r\n  navItemClicked = (screenName, index) => {\r\n    this.props.history.push(getRouteName(screenName))\r\n    this.setState({ selectedNavOption: index, visible: false })\r\n  }\r\n\r\n  getIcon = (navOption, index, selectedNavOption, navIconSize) => {\r\n    //const iconSize = '18px';\r\n    const grey3 = '#ccd4f8';\r\n    const white = '#fff';\r\n    switch (navOption) {\r\n      case 'Dashboard': return <HomeFilled style={{\r\n        fontSize: navIconSize,\r\n        color: selectedNavOption === index ? white : grey3\r\n      }}\r\n      \r\n      />\r\n      \r\n      // <AppstoreFilled style={{\r\n      //   fontSize: navIconSize,\r\n      //   color: selectedNavOption === index ? white : grey3\r\n      // }} />\r\n      //<img src={home} style={{width:'30px'}}/> \r\n        \r\n      \r\n      \r\n      case 'Services': return <DribbbleCircleFilled style={{\r\n        fontSize: navIconSize,\r\n        color: selectedNavOption === index ? white : grey3\r\n      }} />\r\n      \r\n      // <ExperimentFilled style={{\r\n      //   fontSize: navIconSize,\r\n      //   color: selectedNavOption === index ? white : grey3\r\n      // }} />\r\n      case 'Promotions': return <FundFilled style={{\r\n        fontSize: navIconSize,\r\n        color: selectedNavOption === index ? white : grey3\r\n      }} />\r\n      case 'Service History': return <FileTextFilled style={{\r\n        fontSize: navIconSize,\r\n        color: selectedNavOption === index ? white : grey3\r\n      }}/>\r\n      // <HistoryOutlined style={{\r\n      //   fontSize: navIconSize,\r\n      //   color: selectedNavOption === index ? white : grey3\r\n      // }} />\r\n      case 'Gift Cards': return <GiftFilled style={{\r\n        fontSize: navIconSize,\r\n        color: selectedNavOption === index ? white : grey3\r\n      }}/>\r\n      \r\n      // <GiftFilled style={{\r\n      //   fontSize: navIconSize,\r\n      //   color: selectedNavOption === index ? white : grey3\r\n      // }} />\r\n      default: return\r\n    }\r\n  }\r\n\r\n  getNavOptionsMob = () => {\r\n    const grey3 = '#edf0f5';\r\n    const navIconSize = '24px'\r\n    const { selectedNavOption } = this.state\r\n    const result = NAV_OPTIONS.map((navOption, index) => {\r\n      return (\r\n        <div className={'nav-option'} style={{ display: 'flex', margin: '20px 0' }} onClick={() => this.navItemClicked(navOption, index)}>\r\n          {this.getIcon(navOption, index, selectedNavOption, navIconSize)}\r\n          <div style={{ color: '#fff', margin: '0 10px' }} className={'nav-option-title-selected'}> {navOption} </div>\r\n          {/* {selectedNavOption === index &&\r\n              <span className={'caret-icon'}><CaretLeftOutlined style={{ color: grey3 }} /></span>\r\n            }           */}\r\n        </div>\r\n      )\r\n    })\r\n    return result\r\n  }\r\n\r\n  getNavOptions = () => {\r\n    const grey3 = '#edf0f5';\r\n    const navIconSize = '18px'\r\n    const { selectedNavOption } = this.state\r\n    const result = NAV_OPTIONS.map((navOption, index) => {\r\n      return (\r\n        <div className={'nav-option'} onClick={() => this.navItemClicked(navOption, index)}>\r\n          <div>\r\n            {this.getIcon(navOption, index, selectedNavOption, navIconSize)}\r\n            {selectedNavOption === index &&\r\n              <span className={'caret-icon'}><CaretLeftOutlined style={{ color: grey3 }} /></span>\r\n            }\r\n          </div>\r\n          <div className={selectedNavOption === index ? 'nav-option-title-selected' : 'nav-option-title'}> {navOption} </div>\r\n        </div>\r\n      )\r\n    })\r\n    return result\r\n  }\r\n\r\n  sideList = (side, options) => (\r\n    <div\r\n      className={''}\r\n      style={{}}\r\n      role=\"presentation\"\r\n      onClick={this.toggleDrawer(side, false)}\r\n      onKeyDown={this.toggleDrawer(side, false)}>\r\n      <div className={'nav-title'}>{HEADER_TITLE}</div>\r\n      <div className={'nav-option-outer-wrapper'}>\r\n        {options.map((text, index) => (\r\n          <div\r\n            className={'nav-option-wrapper'}\r\n            key={text}\r\n            onClick={() => this.navItemClicked(text)}>\r\n            <span className={text === this.state.selectedOption ? 'nav-option-icon option-selected' : 'nav-option-icon'}>{this.getIcon(text)}</span>\r\n            <span className={text === this.state.selectedOption ? 'option-selected nav-option-title' : 'nav-option-title'}>{text}</span>\r\n          </div>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n\r\n\r\n\r\n  render() {\r\n    //const { loginReducers } = this.props\r\n    const { visible, selectedOption, userType, selectedNavOption } = this.state\r\n\r\n\r\n\r\n    // if (window.location.pathname === '/login' || window.location.pathname === '/')\r\n    //   return null\r\n    const iconSize = '18px';\r\n    const grey3 = '#b1b1b1';\r\n    return (\r\n      <div className={'nav-screen'}>\r\n        <div className={'navbar'} >\r\n\r\n          {/* <div className={'nav-title'}\r\n            onClick={this.toggleDrawer('left', true)}>\r\n             <DehazeIcon /> \r\n          </div> */}\r\n          <div className={'nav-options-wrapper'} >\r\n            {this.getNavOptions()}\r\n\r\n            <div className={'nav-option logout-option'} onClick={() => null}>\r\n              <div>\r\n                <AppstoreFilled style={{\r\n                  fontSize: '24px',\r\n                  color: '#b1b1b1'\r\n                }} />\r\n              </div>\r\n              <div className={0 ? 'nav-option-title-selected' : 'nav-option-title'}>Logout</div>\r\n            </div>\r\n          </div>\r\n          {/* {userType && this.getNavOptions().map((text, index) => (\r\n            \r\n            <div\r\n              className={text === selectedOption ? 'nav-options option-selected' : 'nav-options'}\r\n              onClick={() => this.navItemClicked(text)}>\r\n              {this.getIcon(text)}\r\n            </div>\r\n            \r\n          ))} */}\r\n        </div >\r\n        <div className={'nav-bar-mob-wrapper'}>\r\n          <MenuOutlined onClick={this.showDrawer} />\r\n        </div>\r\n        <Drawer\r\n          title=\"Basic Drawer\"\r\n          placement={'left'}\r\n          closable={false}\r\n          onClose={() => this.setState({ visible: false })}\r\n          visible={visible}\r\n          title={<div style={{ color: '#fff' }}>Glow Tox</div>}\r\n          headerStyle={{ backgroundColor: '#5C72E9', color: '#fff' }}\r\n          bodyStyle={{ backgroundColor: '#5C72E9' }}\r\n          key={'left'}>\r\n          <div className={'nav-options-wrapper-mob'} >\r\n            {this.getNavOptionsMob()}\r\n          </div>\r\n        </Drawer>\r\n      </div >\r\n    )\r\n  }\r\n}\r\nexport default withRouter(NavBar)\r\n",["59","60"],"C:\\Users\\Charan\\Admin\\app\\Changes\\src\\routes\\gift-cards\\index.js",["61"],"C:\\Users\\Charan\\Admin\\app\\Changes\\src\\config\\api\\index.js",[],"C:\\Users\\Charan\\Admin\\app\\Changes\\src\\routes\\promotions\\index.js",["62","63"],"C:\\Users\\Charan\\Admin\\app\\Changes\\src\\routes\\service-history\\index.js",["64","65","66","67","68","69"],{"ruleId":"70","severity":1,"message":"71","line":4,"column":31,"nodeType":"72","messageId":"73","endLine":4,"endColumn":39},{"ruleId":"70","severity":1,"message":"74","line":11,"column":9,"nodeType":"72","messageId":"73","endLine":11,"endColumn":13},{"ruleId":"70","severity":1,"message":"75","line":2,"column":28,"nodeType":"72","messageId":"73","endLine":2,"endColumn":36},{"ruleId":"70","severity":1,"message":"76","line":3,"column":31,"nodeType":"72","messageId":"73","endLine":3,"endColumn":39},{"ruleId":"70","severity":1,"message":"77","line":6,"column":8,"nodeType":"72","messageId":"73","endLine":6,"endColumn":15},{"ruleId":"78","severity":1,"message":"79","line":23,"column":26,"nodeType":"80","messageId":"81","endLine":23,"endColumn":27,"suggestions":"82"},{"ruleId":"78","severity":1,"message":"79","line":23,"column":51,"nodeType":"80","messageId":"81","endLine":23,"endColumn":52,"suggestions":"83"},{"ruleId":"70","severity":1,"message":"84","line":44,"column":13,"nodeType":"72","messageId":"73","endLine":44,"endColumn":19},{"ruleId":"70","severity":1,"message":"85","line":61,"column":11,"nodeType":"72","messageId":"73","endLine":61,"endColumn":17},{"ruleId":"70","severity":1,"message":"86","line":73,"column":11,"nodeType":"72","messageId":"73","endLine":73,"endColumn":25},{"ruleId":"87","severity":1,"message":"88","line":127,"column":19,"nodeType":"89","endLine":127,"endColumn":61},{"ruleId":"70","severity":1,"message":"90","line":3,"column":8,"nodeType":"72","messageId":"73","endLine":3,"endColumn":12},{"ruleId":"70","severity":1,"message":"91","line":10,"column":3,"nodeType":"72","messageId":"73","endLine":10,"endColumn":19},{"ruleId":"70","severity":1,"message":"92","line":12,"column":3,"nodeType":"72","messageId":"73","endLine":12,"endColumn":18},{"ruleId":"70","severity":1,"message":"93","line":15,"column":3,"nodeType":"72","messageId":"73","endLine":15,"endColumn":13},{"ruleId":"70","severity":1,"message":"94","line":16,"column":3,"nodeType":"72","messageId":"73","endLine":16,"endColumn":13},{"ruleId":"70","severity":1,"message":"95","line":23,"column":18,"nodeType":"72","messageId":"73","endLine":23,"endColumn":24},{"ruleId":"70","severity":1,"message":"96","line":23,"column":26,"nodeType":"72","messageId":"73","endLine":23,"endColumn":31},{"ruleId":"70","severity":1,"message":"97","line":23,"column":33,"nodeType":"72","messageId":"73","endLine":23,"endColumn":38},{"ruleId":"70","severity":1,"message":"98","line":24,"column":8,"nodeType":"72","messageId":"73","endLine":24,"endColumn":12},{"ruleId":"70","severity":1,"message":"99","line":122,"column":11,"nodeType":"72","messageId":"73","endLine":122,"endColumn":16},{"ruleId":"70","severity":1,"message":"100","line":185,"column":22,"nodeType":"72","messageId":"73","endLine":185,"endColumn":36},{"ruleId":"70","severity":1,"message":"101","line":185,"column":38,"nodeType":"72","messageId":"73","endLine":185,"endColumn":46},{"ruleId":"70","severity":1,"message":"102","line":185,"column":48,"nodeType":"72","messageId":"73","endLine":185,"endColumn":65},{"ruleId":"70","severity":1,"message":"103","line":191,"column":11,"nodeType":"72","messageId":"73","endLine":191,"endColumn":19},{"ruleId":"70","severity":1,"message":"99","line":192,"column":11,"nodeType":"72","messageId":"73","endLine":192,"endColumn":16},{"ruleId":"104","severity":1,"message":"105","line":233,"column":11,"nodeType":"106","endLine":233,"endColumn":64},{"ruleId":"107","replacedBy":"108"},{"ruleId":"109","replacedBy":"110"},{"ruleId":"87","severity":1,"message":"111","line":19,"column":21,"nodeType":"89","endLine":19,"endColumn":24},{"ruleId":"70","severity":1,"message":"71","line":3,"column":29,"nodeType":"72","messageId":"73","endLine":3,"endColumn":37},{"ruleId":"70","severity":1,"message":"112","line":9,"column":9,"nodeType":"72","messageId":"73","endLine":9,"endColumn":17},{"ruleId":"70","severity":1,"message":"113","line":1,"column":8,"nodeType":"72","messageId":"73","endLine":1,"endColumn":14},{"ruleId":"70","severity":1,"message":"114","line":2,"column":8,"nodeType":"72","messageId":"73","endLine":2,"endColumn":14},{"ruleId":"70","severity":1,"message":"115","line":3,"column":8,"nodeType":"72","messageId":"73","endLine":3,"endColumn":14},{"ruleId":"70","severity":1,"message":"116","line":5,"column":10,"nodeType":"72","messageId":"73","endLine":5,"endColumn":27},{"ruleId":"70","severity":1,"message":"71","line":7,"column":43,"nodeType":"72","messageId":"73","endLine":7,"endColumn":51},{"ruleId":"87","severity":1,"message":"111","line":35,"column":23,"nodeType":"89","endLine":35,"endColumn":26},"no-unused-vars","'Skeleton' is defined but never used.","Identifier","unusedVar","'Link' is assigned a value but never used.","'Suspense' is defined but never used.","'Checkbox' is defined but never used.","'Cookies' is defined but never used.","no-useless-escape","Unnecessary escape character: \\[.","Literal","unnecessaryEscape",["117","118"],["119","120"],"'result' is assigned a value but never used.","'layout' is assigned a value but never used.","'onFinishFailed' is assigned a value but never used.","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","'Icon' is defined but never used.","'ExperimentFilled' is defined but never used.","'HistoryOutlined' is defined but never used.","'StarFilled' is defined but never used.","'ShopFilled' is defined but never used.","'Button' is defined but never used.","'Radio' is defined but never used.","'Space' is defined but never used.","'home' is defined but never used.","'grey3' is assigned a value but never used.","'selectedOption' is assigned a value but never used.","'userType' is assigned a value but never used.","'selectedNavOption' is assigned a value but never used.","'iconSize' is assigned a value but never used.","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","no-native-reassign",["121"],"no-negated-in-lhs",["122"],"The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","'TextArea' is assigned a value but never used.","'Header' is defined but never used.","'Footer' is defined but never used.","'Navbar' is defined but never used.","'DASHBOARD_OPTIONS' is defined but never used.",{"messageId":"123","fix":"124","desc":"125"},{"messageId":"126","fix":"127","desc":"128"},{"messageId":"123","fix":"129","desc":"125"},{"messageId":"126","fix":"130","desc":"128"},"no-global-assign","no-unsafe-negation","removeEscape",{"range":"131","text":"132"},"Remove the `\\`. This maintains the current functionality.","escapeBackslash",{"range":"133","text":"134"},"Replace the `\\` with `\\\\` to include the actual backslash character.",{"range":"135","text":"132"},{"range":"136","text":"134"},[620,621],"",[620,620],"\\",[645,646],[645,645]]