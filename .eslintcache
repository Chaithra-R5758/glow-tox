[{"C:\\Users\\Charan\\Admin\\app\\Changes\\src\\components\\navbar\\index.js":"1","C:\\Users\\Charan\\Admin\\app\\Changes\\src\\config\\api\\index.js":"2","C:\\Users\\Charan\\Admin\\app\\Changes\\src\\routes\\service\\index.js":"3","C:\\Users\\Charan\\Admin\\app\\Changes\\src\\routes\\login\\index.js":"4","C:\\Users\\Charan\\Admin\\app\\Changes\\src\\routes\\promotions\\index.js":"5"},{"size":8961,"mtime":1611640496150,"results":"6","hashOfConfig":"7"},{"size":417,"mtime":1611640496158,"results":"8","hashOfConfig":"7"},{"size":11805,"mtime":1611640496510,"results":"9","hashOfConfig":"7"},{"size":6613,"mtime":1611640496207,"results":"10","hashOfConfig":"7"},{"size":10943,"mtime":1611641708592,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","errorCount":0,"warningCount":17,"fixableErrorCount":0,"fixableWarningCount":0,"source":"14","usedDeprecatedRules":"15"},"lendpl",{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"15"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"20"},{"filePath":"21","messages":"22","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"23","usedDeprecatedRules":"15"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\Charan\\Admin\\app\\Changes\\src\\components\\navbar\\index.js",["26","27","28","29","30","31","32","33","34","35","36","37","38","39","40","41","42"],"import React from 'react';\r\nimport { withRouter, } from \"react-router-dom\";\r\nimport Icon from '@ant-design/icons';\r\nimport './navbar.scss';\r\nimport { NAV_OPTIONS, HEADER_TITLE } from '../../constants/';\r\nimport {\r\n  CaretLeftOutlined,\r\n  GiftFilled,\r\n  FundFilled,\r\n  ExperimentFilled,\r\n  AppstoreFilled,\r\n  HistoryOutlined,\r\n  MenuOutlined,\r\n  HomeFilled,\r\n  StarFilled,\r\n  ShopFilled,\r\n  FileTextFilled,\r\n  DribbbleCircleFilled,\r\n  PoweroffOutlined\r\n} from '@ant-design/icons';\r\nimport { getRouteName } from '../../utils/';\r\n//import { connect } from 'react-redux';\r\nimport Cookies from 'js-cookie';\r\nimport { Drawer, Button, Radio, Space } from 'antd';\r\nimport home from '../../assets/home.jpg'\r\n\r\nclass NavBar extends React.Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      top: false,\r\n      left: false,\r\n      bottom: false,\r\n      right: false,\r\n      selectedOption: '',\r\n      userType: '',\r\n      //  screenName: 'Home',\r\n      selectedNavOption: -1,\r\n      visible: false,\r\n      pathname:'',\r\n    }\r\n  }\r\n\r\n  showDrawer = () => {\r\n    this.setState({\r\n      visible: true,\r\n    });\r\n  };\r\n\r\n  componentWillMount() {\r\n    // const userType = Cookies.get('userType')\r\n    // if (userType) {\r\n    //   this.setState({ userType })\r\n    // }\r\n  }\r\n\r\n  getIndexForPath = (path) => {\r\n    switch(path){\r\n      case '/dashboard' : return 0;\r\n      case '/services' : return 1;\r\n      case '/promotions' : return 2;\r\n      case '/servicehistory' : return 3;\r\n      case '/giftcards' : return 4;\r\n      default :return 0;\r\n    }\r\n  }\r\n\r\n  componentWillUpdate(newProps,newState){\r\n    const path = window.location.pathname\r\n    const {pathname} = this.state\r\n    if(!pathname || pathname !== path){\r\n      this.setState({pathname:path},() => {\r\n        this.setState({ selectedNavOption: this.getIndexForPath(path) })\r\n      })\r\n    }\r\n  }\r\n\r\n  // componentWillUpdate(){\r\n    \r\n  //   const path = window.location.pathname\r\n  //   debugger\r\n  //   switch(path){\r\n  //     case '' : this.setState({ selectedNavOption: 1 })\r\n  //     break;\r\n  //     default : this.setState({ selectedNavOption: 2 })\r\n  //     break;\r\n  //   }\r\n  // }\r\n\r\n  toggleDrawer = (side, open) => event => {\r\n    if (event.type === 'keydown' && (event.key === 'Tab' || event.key === 'Shift')) {\r\n      return;\r\n    }\r\n    this.setState({ left: open });\r\n  };\r\n\r\n  navItemClicked = (screenName, index) => {\r\n    this.props.history.push(getRouteName(screenName))\r\n    this.setState({ selectedNavOption: index, visible: false })\r\n  }\r\n\r\n  getIcon = (navOption, index, selectedNavOption, navIconSize) => {\r\n    //const iconSize = '18px';\r\n    const grey3 = '#ccd4f8';\r\n    const white = '#fff';\r\n    switch (navOption) {\r\n      case 'Dashboard': return <HomeFilled style={{\r\n        fontSize: navIconSize,\r\n        color: selectedNavOption === index ? white : grey3\r\n      }}\r\n      \r\n      />\r\n      \r\n      // <AppstoreFilled style={{\r\n      //   fontSize: navIconSize,\r\n      //   color: selectedNavOption === index ? white : grey3\r\n      // }} />\r\n      //<img src={home} style={{width:'30px'}}/> \r\n        \r\n      \r\n      \r\n      case 'Services': return <DribbbleCircleFilled style={{\r\n        fontSize: navIconSize,\r\n        color: selectedNavOption === index ? white : grey3\r\n      }} />\r\n      \r\n      // <ExperimentFilled style={{\r\n      //   fontSize: navIconSize,\r\n      //   color: selectedNavOption === index ? white : grey3\r\n      // }} />\r\n      case 'Promotions': return <FundFilled style={{\r\n        fontSize: navIconSize,\r\n        color: selectedNavOption === index ? white : grey3\r\n      }} />\r\n      case 'Service History': return <FileTextFilled style={{\r\n        fontSize: navIconSize,\r\n        color: selectedNavOption === index ? white : grey3\r\n      }}/>\r\n      // <HistoryOutlined style={{\r\n      //   fontSize: navIconSize,\r\n      //   color: selectedNavOption === index ? white : grey3\r\n      // }} />\r\n      case 'Gift Cards': return <GiftFilled style={{\r\n        fontSize: navIconSize,\r\n        color: selectedNavOption === index ? white : grey3\r\n      }}/>\r\n      \r\n      // <GiftFilled style={{\r\n      //   fontSize: navIconSize,\r\n      //   color: selectedNavOption === index ? white : grey3\r\n      // }} />\r\n      default: return\r\n    }\r\n  }\r\n\r\n  logOutClicked = () => {\r\n    Cookies.remove('accessToken')\r\n    Cookies.remove('userType')\r\n    window.location.reload();\r\n  }\r\n\r\n  getNavOptionsMob = () => {\r\n    const grey3 = '#edf0f5';\r\n    const navIconSize = '24px'\r\n    const { selectedNavOption } = this.state\r\n    const result = NAV_OPTIONS.map((navOption, index) => {\r\n      return (\r\n        <div className={'nav-option'} style={{ display: 'flex', margin: '20px 0' }} onClick={() => this.navItemClicked(navOption, index)}>\r\n          {this.getIcon(navOption, index, selectedNavOption, navIconSize)}\r\n          <div style={{ color: '#fff', margin: '0 10px' }} className={'nav-option-title-selected'}> {navOption} </div>\r\n          {/* {selectedNavOption === index &&\r\n              <span className={'caret-icon'}><CaretLeftOutlined style={{ color: grey3 }} /></span>\r\n            }           */}\r\n        </div>\r\n      )\r\n    })\r\n    return result\r\n  }\r\n\r\n  getNavOptions = () => {\r\n    const grey3 = '#edf0f5';\r\n    const navIconSize = '18px'\r\n    const { selectedNavOption } = this.state\r\n    const result = NAV_OPTIONS.map((navOption, index) => {\r\n      return (\r\n        <div className={'nav-option'} onClick={() => this.navItemClicked(navOption, index)}>\r\n          <div>\r\n            {this.getIcon(navOption, index, selectedNavOption, navIconSize)}\r\n            {selectedNavOption === index &&\r\n              <span className={'caret-icon'}><CaretLeftOutlined style={{ color: grey3 }} /></span>\r\n            }\r\n          </div>\r\n          <div className={selectedNavOption === index ? 'nav-option-title-selected' : 'nav-option-title'}> {navOption} </div>\r\n        </div>\r\n      )\r\n    })\r\n    return result\r\n  }\r\n\r\n  sideList = (side, options) => (\r\n    <div\r\n      className={''}\r\n      style={{}}\r\n      role=\"presentation\"\r\n      onClick={this.toggleDrawer(side, false)}\r\n      onKeyDown={this.toggleDrawer(side, false)}>\r\n      <div className={'nav-title'}>{HEADER_TITLE}</div>\r\n      <div className={'nav-option-outer-wrapper'}>\r\n        {options.map((text, index) => (\r\n          <div\r\n            className={'nav-option-wrapper'}\r\n            key={text}\r\n            onClick={() => this.navItemClicked(text)}>\r\n            <span className={text === this.state.selectedOption ? 'nav-option-icon option-selected' : 'nav-option-icon'}>{this.getIcon(text)}</span>\r\n            <span className={text === this.state.selectedOption ? 'option-selected nav-option-title' : 'nav-option-title'}>{text}</span>\r\n          </div>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n\r\n\r\n\r\n  render() {\r\n    //const { loginReducers } = this.props\r\n    const { visible, selectedOption, userType, selectedNavOption } = this.state\r\n\r\n\r\n\r\n    // if (window.location.pathname === '/login' || window.location.pathname === '/')\r\n    //   return null\r\n    const iconSize = '18px';\r\n    const grey3 = '#b1b1b1';\r\n    return (\r\n      <div className={'nav-screen'}>\r\n        <div className={'navbar'} >\r\n\r\n          {/* <div className={'nav-title'}\r\n            onClick={this.toggleDrawer('left', true)}>\r\n             <DehazeIcon /> \r\n          </div> */}\r\n          <div className={'nav-options-wrapper'} >\r\n            {this.getNavOptions()}\r\n\r\n            <div className={'nav-option logout-option'} onClick={this.logOutClicked}>\r\n              <div>\r\n                <PoweroffOutlined style={{\r\n                  fontSize: '16px',\r\n                  color: '#b1b1b1'\r\n                }} />\r\n              </div>\r\n              <div className={0 ? 'nav-option-title-selected' : 'nav-option-title'}>Logout</div>\r\n            </div>\r\n          </div>\r\n          {/* {userType && this.getNavOptions().map((text, index) => (\r\n            \r\n            <div\r\n              className={text === selectedOption ? 'nav-options option-selected' : 'nav-options'}\r\n              onClick={() => this.navItemClicked(text)}>\r\n              {this.getIcon(text)}\r\n            </div>\r\n            \r\n          ))} */}\r\n        </div >\r\n        <div className={'nav-bar-mob-wrapper'}>\r\n          <MenuOutlined onClick={this.showDrawer} />\r\n        </div>\r\n        <Drawer\r\n          title=\"Basic Drawer\"\r\n          placement={'left'}\r\n          closable={false}\r\n          onClose={() => this.setState({ visible: false })}\r\n          visible={visible}\r\n          title={<div style={{ color: '#fff' }}>Glow Tox</div>}\r\n          headerStyle={{ backgroundColor: '#5C72E9', color: '#fff' }}\r\n          bodyStyle={{ backgroundColor: '#5C72E9' }}\r\n          key={'left'}>\r\n          <div className={'nav-options-wrapper-mob'} >\r\n            {this.getNavOptionsMob()}\r\n          </div>\r\n        </Drawer>\r\n      </div >\r\n    )\r\n  }\r\n}\r\nexport default withRouter(NavBar)\r\n",["43","44"],"C:\\Users\\Charan\\Admin\\app\\Changes\\src\\config\\api\\index.js",[],"C:\\Users\\Charan\\Admin\\app\\Changes\\src\\routes\\service\\index.js",["45","46","47","48","49","50","51","52"],"import { PageTitle } from '../../components/page-title'\r\nimport loginImg from '../../assets/login-img.png'\r\nimport './service.scss';\r\nimport { Card, Button, Modal, Skeleton, Anchor, Input, Image, PageHeader, Form } from 'antd';\r\nimport React, { useState } from 'react';\r\nimport { withRouter } from 'react-router-dom';\r\nimport axios from '../../config/api/'\r\nimport defaultImg from '../../assets/default.png'\r\nimport { Error } from '../../components/error'\r\nimport { BeforeAfter } from './before-after'\r\nconst { Meta } = Card;\r\nconst { TextArea } = Input;\r\nconst { Link } = Anchor;\r\nconst beforeAfterSet = {\r\n  before: {},\r\n  after: {},\r\n}\r\nclass Service extends React.Component {\r\n  constructor() {\r\n    super()\r\n    this.state = {\r\n      service: {},\r\n     // response: {},\r\n      services:[],\r\n      defaultImg,\r\n      loading: false,\r\n      error: false,\r\n      saveServiceLoading: false,\r\n      beforeAfterSets: []\r\n    }\r\n  }\r\n\r\n  async componentDidMount() {\r\n    this.setState({loading:true})\r\n    const response = await axios.get('/admin/getAllAdminServices',)\r\n    const services = response.data && response.data.service\r\n    if(services)\r\n    this.setState({services, loading:false})\r\n  }\r\n\r\n  imageHandler = e => {\r\n    const reader = new FileReader();\r\n    reader.onload = () => {\r\n      if (reader.readyState === 2) {\r\n        this.setState({ defaultImg: reader.result });\r\n      }\r\n    };\r\n    reader.readAsDataURL(e.target.files[0]);\r\n  };\r\n\r\n  showModal = (service = {}) => {\r\n    this.setState({\r\n      visible: true,\r\n      service\r\n    });\r\n  };\r\n\r\n  hideModal = () => {\r\n    this.setState({\r\n      visible: false,\r\n    });\r\n  };\r\n\r\n  servicesUI = () => {\r\n    const { loading, error, services } = this.state\r\n    if (loading) {\r\n      return (\r\n        [\"\", \"\", \"\", \"\", \"\"].map(option =>\r\n          <div className={'dashboard-card'}>\r\n            <Card\r\n              style={{ width: 240 }}>\r\n              <Skeleton paragraph={{ rows: 3 }} />\r\n            </Card>\r\n          </div>\r\n        ))\r\n    }\r\n    else if (error) { return <Error title=\"Something went wrong\" /> }\r\n    else if (services && services.length === 0) {\r\n      return <Error title=\"0 Service exists\" />\r\n    }\r\n    else if (services\r\n      && services.length > 0) {\r\n      return (\r\n        services.map(service =>\r\n          <div className={'dashboard-card'}>\r\n            <Card\r\n              hoverable\r\n              style={{ width: '220px', height: '300px' }}\r\n              cover={<img\r\n                alt=\"example\"\r\n                src={service.serviceImage || loginImg}\r\n                style={{\r\n                  height: '200px',\r\n                  backgroundColor: '#EFF2F7',\r\n                  position: 'relative',\r\n                  objectFit: 'cover',\r\n                  borderRadius: '0 0 50% 50%/0 0 15% 15%',\r\n                  borderTopLeftRadius: '5px',\r\n                  borderTopRightRadius: '5px',\r\n                }}\r\n              />}>\r\n              <div className={'service-card-body-wrapper'}>\r\n                <div className={'service-meta-data-wrapper'}>\r\n                  <div className={'service-title'}>{service.serviceName || \"No-Title\"}</div>\r\n                  <div className={'edit-btn'}\r\n                    onClick={() => this.showModal(service)}>\r\n                    Edit\r\n                      </div>\r\n                </div>\r\n                <div>\r\n                </div>\r\n              </div>\r\n            </Card>\r\n          </div>\r\n        )\r\n      )\r\n    }\r\n  }\r\n\r\n\r\n  saveService = async (service) => {\r\n    this.setState({\r\n      saveServiceLoading: true,\r\n    })\r\n    const saveService = await axios.get('/admin/saveService', service)\r\n    this.setState({\r\n      saveServiceLoading: false,\r\n    })\r\n  }\r\n\r\n  onChangeName = e => {\r\n    this.setState(prevState => ({\r\n      service: {\r\n        ...prevState.service,\r\n        serviceName: e.target.value\r\n      }\r\n    }))\r\n  }\r\n\r\n  onChangeEmail = e => {\r\n    this.setState(prevState => ({\r\n      service: {\r\n        ...prevState.service,\r\n        serviceEmail: e.target.value\r\n      }\r\n    }))\r\n  }\r\n\r\n  onChangeDesc = e => {\r\n    this.setState(prevState => ({\r\n      service: {\r\n        ...prevState.service,\r\n        description: e.target.value\r\n      }\r\n    }))\r\n  }\r\n\r\n\r\n  render() {\r\n    const { defaultImg } = this.state;\r\n    const { beforeAfterSets, service, saveServiceLoading } = this.state\r\n\r\n    return (\r\n      <div className=\"service-screen\">\r\n        <div className={'content-wrapper'}>\r\n          <PageTitle\r\n            title={'Service'}\r\n          />\r\n          <div className={\"service-card\"}>\r\n            <Card>\r\n              <div className={'content-body-wrapper'}>\r\n                <div className={'primary-btn'} onClick={this.showModal}>\r\n                  Add New Service\r\n              </div>\r\n                <div className={'modal-wrapper'}>\r\n                  <Modal\r\n                    visible={this.state.visible}\r\n                    wrapClassName={'update-panel'}\r\n                    onCancel={this.hideModal} footer={null} width={800}\r\n                    style={{ top: 100 }}>\r\n\r\n                    <div style={{ display: 'flex' }}>\r\n                      <div className={'modal-title'} style={{\r\n                        flex: '1',\r\n                        ontFamily: \"Poppins, sans-serif\",\r\n                        fontWeight: ' bolder',\r\n                        fontSize: '18px',\r\n                        // marginTop: 20\r\n                      }}>\r\n                        Service Add/Edit\r\n                      </div>\r\n                      {/* <Button \r\n                        onClick={() => this.enterLoading(1)} \r\n                        className=\"save-btn\"\r\n                        style={{\r\n                          backgroundColor: '#5D72E9', \r\n                          color: 'white', \r\n                          borderRadius: '5px', \r\n                          padding: '0px 25px', \r\n                          marginTop: '20px' \r\n                        }}\r\n                        >Save</Button> */}\r\n                    </div>\r\n                    <div\r\n                      className={'modal-content-wrapper'}\r\n                      style={{\r\n                        display: 'flex',\r\n                        flexWrap: 'wrap',\r\n                      }}\r\n                    >\r\n                      <div className={'modal-content-left-wrapper'}\r\n                        style={{\r\n                          display: 'flex',\r\n                          flex: '1',\r\n                          justifyContent: 'center',\r\n                          alignSelf: 'center',\r\n                          margin: '0 0 20px 0',\r\n                          flexDirection: 'column',\r\n                          width: '50%'\r\n                        }}>\r\n                        <label htmlFor=\"input\">\r\n                          <img\r\n                            src={service.serviceImage || defaultImg}\r\n                            id=\"img\"\r\n                            className=\"img\"\r\n                            style={{\r\n                              margin: '10%',\r\n                              width: 270,\r\n                              height: 200,\r\n                              objectFit: 'contain'\r\n                            }}\r\n                          />\r\n                        </label>\r\n                        <input style={{ display: 'none' }}\r\n                          type=\"file\"\r\n                          accept=\"image/*\"\r\n                          name=\"image-upload\"\r\n                          id=\"input\"\r\n                          onChange={this.imageHandler}\r\n                        />\r\n                        <div className=\"modal-title\"\r\n                          onClick={() => this.setState({\r\n                            beforeAfterSets: [...beforeAfterSets, beforeAfterSet]\r\n                          })}\r\n                          style={{\r\n                            fontFamily: \"Poppins, sans-serif\",\r\n                            fontWeight: ' bolder', fontSize: '14px',\r\n                            marginBottom: '10px', cursor: 'pointer',\r\n                          }}>  Some Pics+ </div>\r\n                        <div\r\n                          className={'thumnail-list-wrapper'}\r\n                          style={{\r\n                            display: 'flex',\r\n                            overflowX: 'auto',\r\n                            margin: '0 15px'\r\n                          }}>\r\n                          {\r\n                            beforeAfterSets\r\n                              .map(beforeAfterSet => {\r\n                                return (<BeforeAfter beforeAfterSet />)\r\n                              })\r\n                          }\r\n                        </div>\r\n                      </div>\r\n                      <div\r\n                        className={'modal-content-right-wrapper'}\r\n                        style={{\r\n                          display: 'flex',\r\n                          flex: 1,\r\n                          flexDirection: 'column',\r\n                        }}\r\n                      >\r\n                        <div style={{\r\n\r\n                        }}>Service Name</div>\r\n                        <input\r\n                          value={service.serviceName}\r\n                          onChange={this.onChangeName}\r\n                          style={{\r\n                            padding: '5px',\r\n                            margin: '5px 0',\r\n                            borderRadius: '5px',\r\n                            border: '1px solid #d9d9d9',\r\n                          }}\r\n                        />\r\n                        <div style={{\r\n\r\n                        }}>Email Id</div>\r\n                        <input\r\n                          value={service.email}\r\n                          onChange={this.onChangeEmail}\r\n                          style={{\r\n                            padding: '5px',\r\n                            margin: '5px 0',\r\n                            borderRadius: '5px',\r\n                            border: '1px solid #d9d9d9',\r\n                          }}\r\n                        />\r\n                        <div style={{\r\n\r\n                        }}>Description</div>\r\n                        <TextArea\r\n                          value={service.description}\r\n                          onChange={this.onChangeDesc}\r\n                          rows={7}\r\n                          style={{\r\n                            padding: '5px',\r\n                            margin: '5px 0',\r\n                            borderRadius: '5px',\r\n                            border: '1px solid #d9d9d9',\r\n                          }}\r\n                        />\r\n                      </div>\r\n                    </div>\r\n\r\n                    <div\r\n                      style={{\r\n                        display: 'flex',\r\n                        justifyContent: 'flex-end',\r\n                      }}>\r\n                      <Button\r\n                        loading={saveServiceLoading}\r\n                        onClick={() => this.saveService(service)}\r\n                        className=\"save-btn\"\r\n                        style={{\r\n                          backgroundColor: '#5D72E9',\r\n                          color: 'white',\r\n                          borderRadius: '5px',\r\n                          padding: '0px 25px',\r\n                          marginTop: '20px'\r\n                        }}>Save</Button>\r\n                    </div>\r\n                  </Modal>\r\n                </div>\r\n                <div className={'dashboard-card-wrapper'}>\r\n                  {this.servicesUI()}\r\n                </div>\r\n              </div>\r\n            </Card>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    )\r\n\r\n  }\r\n\r\n}\r\nexport default withRouter(Service);","C:\\Users\\Charan\\Admin\\app\\Changes\\src\\routes\\login\\index.js",["53","54","55","56","57","58","59","60","61","62","63","64"],"import { withRouter, } from \"react-router-dom\";\r\nimport React, { Component, Suspense } from 'react';\r\nimport { Form, Input, Button, Checkbox, Card, Image } from 'antd';\r\nimport loginImg from '../../assets/login-img.png'\r\nimport './login.scss'\r\nimport Cookies from 'js-cookie';\r\nimport { UserOutlined, LockOutlined } from '@ant-design/icons';\r\n//import axios from '../../config/api/'\r\nimport axios from 'axios';\r\nimport { response } from './mock.js'\r\n\r\nclass Login extends Component {\r\n\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      password: '',\r\n      userName: '',\r\n      errorMsg: '',\r\n      isLoading: false,\r\n    }\r\n  }\r\n\r\n  isEmailId = (email) => {\r\n    const re = /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\r\n    return re.test(String(email).toLowerCase());\r\n  }\r\n\r\n  signInClicked = async () => {\r\n\r\n    //  this.props.history.push('/dashboard')\r\n    //  window.location.reload();\r\n    const { password, userName } = this.state\r\n\r\n\r\n    // if (!password || !userName) {\r\n    //   this.setState({ errorMsg: 'UserName/Password cannot be empty' })\r\n    // }\r\n    // else if (!this.isEmailId(userName)) {\r\n    //   this.setState({ errorMsg: 'Invalid Email ID' })\r\n    // }\r\n    // else if (password.length <= 4) {\r\n    //   this.setState({ errorMsg: 'Invalid password length' })\r\n    // }\r\n    // else \r\n\r\n    let body = {\r\n      \"emailId\": \"test@gmail.com\",\r\n      \"password\": \"test@1234\",\r\n      \"userType\": \"Super Admin\"\r\n    }\r\n    const baseURL = 'https://d9c6y9z297.execute-api.eu-west-1.amazonaws.com/dev'\r\n\r\n    //const r = Cookies.get('connect.sid')\r\n\r\n\r\n    //   const response2 = await axios.create({\r\n    //             baseURL: baseURL,\r\n    //         })\r\n    //         .get('/admin')\r\n    //         .then(function (response) {\r\n    //           debugger\r\n    //         //    console.log('Cookie: ',response.config.headers.Cookie);\r\n    //             console.log('Cookie:....... ',response.data);\r\n\r\n    //             return response.data;\r\n    //         })\r\n    //         .catch(function (error) {\r\n    //             console.log(error);\r\n    //         })\r\n    // console.log(\"response2 \",response2)\r\n\r\n\r\n\r\n    const response1 = await axios.post('https://d9c6y9z297.execute-api.eu-west-1.amazonaws.com/dev/login'\r\n      , body)\r\n      .then(function (response) {\r\n        Cookies.set('accessToken', response.data.auth);\r\n       // return response.data;\r\n      })\r\n      .catch(function (error) {\r\n        console.log(error);\r\n      });\r\n\r\n\r\n\r\n\r\n    // {\r\n    //   this.setState({ isLoading: true })\r\n    //   const result = await axios.post('https://d9c6y9z297.execute-api.eu-west-1.amazonaws.com/prod/login',\r\n    //     {\r\n    //       emailId: \"test@gmail.com\",\r\n    //       password : \"test@1234\",\r\n    //       userType : \"Super Admin\"\r\n    //     },\r\n    //     {\r\n    //       headers: {\r\n    //         \"Content-Type\": \"application/json\"\r\n    //       }\r\n    //     })\r\n    //   // const result = await axios.post('/login', {\r\n    //   //     \"emailId\": \"test@gmail.com\",\r\n    //   //     \"password\" : \"test1@1234\",\r\n    //   //     \"userType\": \"Super Admin\",\r\n    //   // })\r\n    //   this.setState({ isLoading: false })\r\n    //   debugger\r\n    //   console.log(\"test\",result.headers['set-cookie'][0])\r\n    //Cookies.set('accessToken', 's%3AHU73-2GOTmSrjEqcs7gWT2IS6QVxsK0F.CkY%2F48BZnDEu8oFUk3ZcLvDXo6iknsz5uQItNmn4O%2FE');\r\n    //   // this.setState({ errorMsg:result.data.message })\r\n    // }\r\n  }\r\n\r\n\r\n\r\n\r\n  render() {\r\n    const { isLoading } = this.state\r\n    const layout = {\r\n      labelCol: {\r\n        span: 8,\r\n      },\r\n      wrapperCol: {\r\n        span: 16,\r\n      },\r\n    };\r\n    const onFinish = (values) => {\r\n      console.log('Success:', values);\r\n    };\r\n\r\n    const onFinishFailed = (errorInfo) => {\r\n      console.log('Failed:', errorInfo);\r\n    };\r\n    const { errorMsg } = this.state\r\n    return (\r\n      <div className={'login-screen'}>\r\n        <div className={'login-wrapper'}>\r\n          <div className={'login-card'}>\r\n            <Card className={'image-card'} style={{ backgroundColor: '#EFF2F7', border: '0px', boxShadow: '0 0px 12px #d2d2d2' }} >\r\n              <Image width={350} src={loginImg} />\r\n            </Card>\r\n            <Card style={{ border: '0px', boxShadow: '0 0px  12px  #d2d2d2' }}>\r\n              <Form\r\n                layout=\"vertical\"\r\n                name=\"normal_login\"\r\n                className=\"login-form\"\r\n                initialValues={{ remember: true }}\r\n                onFinish={onFinish} >\r\n\r\n                <div className={'login-brand-logo-wrapper'}>\r\n                  <h1>GLOWTOX</h1>\r\n                </div>\r\n                <Form.Item\r\n                  label=\"Login\"\r\n                  name=\"username\"\r\n                  rules={[{ message: 'Please input your Username!' }]}>\r\n                  <Input\r\n                    size=\"large\"\r\n                    style={{ borderRadius: '5px' }}\r\n                    prefix={<UserOutlined className=\"site-form-item-icon\" />}\r\n                    onChange={(e) => this.setState({ userName: e.target.value })}\r\n                    placeholder=\"Username\" />\r\n                </Form.Item>\r\n                <Form.Item\r\n                  label=\"Password\"\r\n                  name=\"password\"\r\n                  rules={[{ message: 'Please input your Password!' }]}\r\n                >\r\n                  <Input size=\"large\" style={{ borderRadius: '5px' }}\r\n                    prefix={<LockOutlined className=\"site-form-item-icon\" />}\r\n                    type=\"password\"\r\n                    placeholder=\"Password\"\r\n                    onChange={(e) => this.setState({ password: e.target.value })}\r\n                  />\r\n                </Form.Item>\r\n                <div className={'error-msg'}>{errorMsg}</div>\r\n                <Form.Item>\r\n                  <Button\r\n                    loading={isLoading}\r\n                    //type={'primary'}\r\n                    type=\"primary\"\r\n                    size=\"large\" className=\"login-btn\" onClick={() => this.signInClicked()}>\r\n                    Sign in\r\n                  </Button>\r\n                </Form.Item>\r\n                <Form.Item style={{ textAlign: 'center', marginTop: '-10px' }}>\r\n                  <a className=\"login-form-forgot\" href=\"\" >\r\n                    Forgot password\r\n                  </a>\r\n                </Form.Item>\r\n              </Form>\r\n            </Card>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  };\r\n}\r\nexport default withRouter(Login)","C:\\Users\\Charan\\Admin\\app\\Changes\\src\\routes\\promotions\\index.js",["65","66","67","68","69","70","71","72","73","74","75","76","77"],{"ruleId":"78","severity":1,"message":"79","line":3,"column":8,"nodeType":"80","messageId":"81","endLine":3,"endColumn":12},{"ruleId":"78","severity":1,"message":"82","line":10,"column":3,"nodeType":"80","messageId":"81","endLine":10,"endColumn":19},{"ruleId":"78","severity":1,"message":"83","line":11,"column":3,"nodeType":"80","messageId":"81","endLine":11,"endColumn":17},{"ruleId":"78","severity":1,"message":"84","line":12,"column":3,"nodeType":"80","messageId":"81","endLine":12,"endColumn":18},{"ruleId":"78","severity":1,"message":"85","line":15,"column":3,"nodeType":"80","messageId":"81","endLine":15,"endColumn":13},{"ruleId":"78","severity":1,"message":"86","line":16,"column":3,"nodeType":"80","messageId":"81","endLine":16,"endColumn":13},{"ruleId":"78","severity":1,"message":"87","line":24,"column":18,"nodeType":"80","messageId":"81","endLine":24,"endColumn":24},{"ruleId":"78","severity":1,"message":"88","line":24,"column":26,"nodeType":"80","messageId":"81","endLine":24,"endColumn":31},{"ruleId":"78","severity":1,"message":"89","line":24,"column":33,"nodeType":"80","messageId":"81","endLine":24,"endColumn":38},{"ruleId":"78","severity":1,"message":"90","line":25,"column":8,"nodeType":"80","messageId":"81","endLine":25,"endColumn":12},{"ruleId":"78","severity":1,"message":"91","line":163,"column":11,"nodeType":"80","messageId":"81","endLine":163,"endColumn":16},{"ruleId":"78","severity":1,"message":"92","line":226,"column":22,"nodeType":"80","messageId":"81","endLine":226,"endColumn":36},{"ruleId":"78","severity":1,"message":"93","line":226,"column":38,"nodeType":"80","messageId":"81","endLine":226,"endColumn":46},{"ruleId":"78","severity":1,"message":"94","line":226,"column":48,"nodeType":"80","messageId":"81","endLine":226,"endColumn":65},{"ruleId":"78","severity":1,"message":"95","line":232,"column":11,"nodeType":"80","messageId":"81","endLine":232,"endColumn":19},{"ruleId":"78","severity":1,"message":"91","line":233,"column":11,"nodeType":"80","messageId":"81","endLine":233,"endColumn":16},{"ruleId":"96","severity":1,"message":"97","line":274,"column":11,"nodeType":"98","endLine":274,"endColumn":64},{"ruleId":"99","replacedBy":"100"},{"ruleId":"101","replacedBy":"102"},{"ruleId":"78","severity":1,"message":"103","line":4,"column":56,"nodeType":"80","messageId":"81","endLine":4,"endColumn":61},{"ruleId":"78","severity":1,"message":"104","line":4,"column":63,"nodeType":"80","messageId":"81","endLine":4,"endColumn":73},{"ruleId":"78","severity":1,"message":"105","line":4,"column":75,"nodeType":"80","messageId":"81","endLine":4,"endColumn":79},{"ruleId":"78","severity":1,"message":"106","line":5,"column":17,"nodeType":"80","messageId":"81","endLine":5,"endColumn":25},{"ruleId":"78","severity":1,"message":"107","line":11,"column":9,"nodeType":"80","messageId":"81","endLine":11,"endColumn":13},{"ruleId":"78","severity":1,"message":"108","line":13,"column":9,"nodeType":"80","messageId":"81","endLine":13,"endColumn":13},{"ruleId":"78","severity":1,"message":"109","line":125,"column":11,"nodeType":"80","messageId":"81","endLine":125,"endColumn":22},{"ruleId":"110","severity":1,"message":"111","line":222,"column":27,"nodeType":"112","endLine":232,"endColumn":29},{"ruleId":"78","severity":1,"message":"113","line":2,"column":28,"nodeType":"80","messageId":"81","endLine":2,"endColumn":36},{"ruleId":"78","severity":1,"message":"114","line":3,"column":31,"nodeType":"80","messageId":"81","endLine":3,"endColumn":39},{"ruleId":"78","severity":1,"message":"115","line":10,"column":10,"nodeType":"80","messageId":"81","endLine":10,"endColumn":18},{"ruleId":"116","severity":1,"message":"117","line":25,"column":26,"nodeType":"118","messageId":"119","endLine":25,"endColumn":27,"suggestions":"120"},{"ruleId":"116","severity":1,"message":"117","line":25,"column":51,"nodeType":"118","messageId":"119","endLine":25,"endColumn":52,"suggestions":"121"},{"ruleId":"78","severity":1,"message":"122","line":33,"column":13,"nodeType":"80","messageId":"81","endLine":33,"endColumn":21},{"ruleId":"78","severity":1,"message":"123","line":33,"column":23,"nodeType":"80","messageId":"81","endLine":33,"endColumn":31},{"ruleId":"78","severity":1,"message":"124","line":52,"column":11,"nodeType":"80","messageId":"81","endLine":52,"endColumn":18},{"ruleId":"78","severity":1,"message":"125","line":75,"column":11,"nodeType":"80","messageId":"81","endLine":75,"endColumn":20},{"ruleId":"78","severity":1,"message":"126","line":119,"column":11,"nodeType":"80","messageId":"81","endLine":119,"endColumn":17},{"ruleId":"78","severity":1,"message":"127","line":131,"column":11,"nodeType":"80","messageId":"81","endLine":131,"endColumn":25},{"ruleId":"128","severity":1,"message":"129","line":187,"column":19,"nodeType":"112","endLine":187,"endColumn":61},{"ruleId":"78","severity":1,"message":"130","line":88,"column":28,"nodeType":"80","messageId":"81","endLine":88,"endColumn":38},{"ruleId":"110","severity":1,"message":"111","line":137,"column":15,"nodeType":"112","endLine":140,"endColumn":17},{"ruleId":"78","severity":1,"message":"131","line":163,"column":11,"nodeType":"80","messageId":"81","endLine":163,"endColumn":24},{"ruleId":"78","severity":1,"message":"132","line":170,"column":13,"nodeType":"80","messageId":"81","endLine":170,"endColumn":21},{"ruleId":"78","severity":1,"message":"133","line":171,"column":13,"nodeType":"80","messageId":"81","endLine":171,"endColumn":21},{"ruleId":"134","severity":1,"message":"135","line":229,"column":38,"nodeType":"136","messageId":"137","endLine":229,"endColumn":40},{"ruleId":"134","severity":1,"message":"135","line":229,"column":62,"nodeType":"136","messageId":"137","endLine":229,"endColumn":64},{"ruleId":"134","severity":1,"message":"135","line":266,"column":38,"nodeType":"136","messageId":"137","endLine":266,"endColumn":40},{"ruleId":"134","severity":1,"message":"135","line":266,"column":63,"nodeType":"136","messageId":"137","endLine":266,"endColumn":65},{"ruleId":"134","severity":1,"message":"135","line":286,"column":42,"nodeType":"136","messageId":"137","endLine":286,"endColumn":44},{"ruleId":"134","severity":1,"message":"135","line":286,"column":65,"nodeType":"136","messageId":"137","endLine":286,"endColumn":67},{"ruleId":"134","severity":1,"message":"135","line":308,"column":42,"nodeType":"136","messageId":"137","endLine":308,"endColumn":44},{"ruleId":"134","severity":1,"message":"135","line":308,"column":63,"nodeType":"136","messageId":"137","endLine":308,"endColumn":65},"no-unused-vars","'Icon' is defined but never used.","Identifier","unusedVar","'ExperimentFilled' is defined but never used.","'AppstoreFilled' is defined but never used.","'HistoryOutlined' is defined but never used.","'StarFilled' is defined but never used.","'ShopFilled' is defined but never used.","'Button' is defined but never used.","'Radio' is defined but never used.","'Space' is defined but never used.","'home' is defined but never used.","'grey3' is assigned a value but never used.","'selectedOption' is assigned a value but never used.","'userType' is assigned a value but never used.","'selectedNavOption' is assigned a value but never used.","'iconSize' is assigned a value but never used.","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","no-native-reassign",["138"],"no-negated-in-lhs",["139"],"'Image' is defined but never used.","'PageHeader' is defined but never used.","'Form' is defined but never used.","'useState' is defined but never used.","'Meta' is assigned a value but never used.","'Link' is assigned a value but never used.","'saveService' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'Suspense' is defined but never used.","'Checkbox' is defined but never used.","'response' is defined but never used.","no-useless-escape","Unnecessary escape character: \\[.","Literal","unnecessaryEscape",["140","141"],["142","143"],"'password' is assigned a value but never used.","'userName' is assigned a value but never used.","'baseURL' is assigned a value but never used.","'response1' is assigned a value but never used.","'layout' is assigned a value but never used.","'onFinishFailed' is assigned a value but never used.","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","'promotions' is assigned a value but never used.","'savePromotion' is assigned a value but never used.","'loginImg' is assigned a value but never used.","'loadings' is assigned a value but never used.","no-mixed-operators","Unexpected mix of '&&' and '||'.","LogicalExpression","unexpectedMixedOperator","no-global-assign","no-unsafe-negation",{"messageId":"144","fix":"145","desc":"146"},{"messageId":"147","fix":"148","desc":"149"},{"messageId":"144","fix":"150","desc":"146"},{"messageId":"147","fix":"151","desc":"149"},"removeEscape",{"range":"152","text":"153"},"Remove the `\\`. This maintains the current functionality.","escapeBackslash",{"range":"154","text":"155"},"Replace the `\\` with `\\\\` to include the actual backslash character.",{"range":"156","text":"153"},{"range":"157","text":"155"},[695,696],"",[695,695],"\\",[720,721],[720,720]]